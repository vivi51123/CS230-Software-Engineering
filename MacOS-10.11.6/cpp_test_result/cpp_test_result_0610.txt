valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak1
==2157== Memcheck, a memory error detector
==2157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2157== Command: ./leak1
==2157== 
Leak 1 test, memory is allocated and not released before the program ends
Expected output:
definitely lost: 100 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 613752ns
==2157== 
==2157== HEAP SUMMARY:
==2157==     in use at exit: 26,394 bytes in 191 blocks
==2157==   total heap usage: 257 allocs, 66 frees, 32,170 bytes allocated
==2157== 
==2157== 100 bytes in 1 blocks are definitely lost in loss record 38 of 63
==2157==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2157==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2157==    by 0x100000C53: createLeak() (leak1.cpp:14)
==2157==    by 0x100000E32: main (leak1.cpp:28)
==2157== 
==2157== 2,064 bytes in 1 blocks are possibly lost in loss record 59 of 63
==2157==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2157==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2157==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2157== 
==2157== 4,096 bytes in 1 blocks are still reachable in loss record 63 of 63
==2157==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2157==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2157==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2157==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2157==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2157==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2157==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2157==    by 0x100001AF1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2157==    by 0x1000014E4: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2157==    by 0x1000010FB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2157==    by 0x100000C90: main (leak1.cpp:19)
==2157== 
==2157== LEAK SUMMARY:
==2157==    definitely lost: 100 bytes in 1 blocks
==2157==    indirectly lost: 0 bytes in 0 blocks
==2157==      possibly lost: 2,064 bytes in 1 blocks
==2157==    still reachable: 4,096 bytes in 1 blocks
==2157==         suppressed: 20,134 bytes in 188 blocks
==2157== 
==2157== For counts of detected and suppressed errors, rerun with: -v
==2157== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak2
==2162== Memcheck, a memory error detector
==2162== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2162== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2162== Command: ./leak2
==2162== 
Leak 2 test: A pointer is assigned to one memory location and is then redirected without releasing the memory block. The second memory block is deleted
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 1365635ns
==2162== 
==2162== HEAP SUMMARY:
==2162==     in use at exit: 26,302 bytes in 191 blocks
==2162==   total heap usage: 258 allocs, 67 frees, 32,094 bytes allocated
==2162== 
==2162== 8 bytes in 1 blocks are definitely lost in loss record 2 of 63
==2162==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2162==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2162==    by 0x100000AD4: MemLeak::createMemLeak(char*) (leak2.cpp:45)
==2162==    by 0x100000CE2: main (leak2.cpp:65)
==2162== 
==2162== 2,064 bytes in 1 blocks are possibly lost in loss record 59 of 63
==2162==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2162==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2162==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2162== 
==2162== 4,096 bytes in 1 blocks are still reachable in loss record 63 of 63
==2162==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2162==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2162==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2162==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2162==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2162==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2162==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2162==    by 0x100001A41: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2162==    by 0x100001434: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2162==    by 0x10000104B: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2162==    by 0x100000B31: main (leak2.cpp:55)
==2162== 
==2162== LEAK SUMMARY:
==2162==    definitely lost: 8 bytes in 1 blocks
==2162==    indirectly lost: 0 bytes in 0 blocks
==2162==      possibly lost: 2,064 bytes in 1 blocks
==2162==    still reachable: 4,096 bytes in 1 blocks
==2162==         suppressed: 20,134 bytes in 188 blocks
==2162== 
==2162== For counts of detected and suppressed errors, rerun with: -v
==2162== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak5
==2167== Memcheck, a memory error detector
==2167== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2167== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2167== Command: ./leak5
==2167== 
Leak 5 test: Testing pointer to pointer memory allocation
Char pointers require 4 bytes for BBB architecture therefore 8 bytes are definitely lost
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 124 bytes in 2 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 804351ns
==2167== 
==2167== HEAP SUMMARY:
==2167==     in use at exit: 26,434 bytes in 193 blocks
==2167==   total heap usage: 259 allocs, 66 frees, 32,210 bytes allocated
==2167== 
==2167== 24 bytes in 1 blocks are indirectly lost in loss record 11 of 65
==2167==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2167==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2167==    by 0x100000BB6: createLeak() (leak5.cpp:14)
==2167==    by 0x100000DDE: main (leak5.cpp:30)
==2167== 
==2167== 100 bytes in 1 blocks are indirectly lost in loss record 39 of 65
==2167==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2167==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2167==    by 0x100000BA3: createLeak() (leak5.cpp:13)
==2167==    by 0x100000DDE: main (leak5.cpp:30)
==2167== 
==2167== 140 (16 direct, 124 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 65
==2167==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2167==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2167==    by 0x100000B93: createLeak() (leak5.cpp:12)
==2167==    by 0x100000DDE: main (leak5.cpp:30)
==2167== 
==2167== 2,064 bytes in 1 blocks are possibly lost in loss record 61 of 65
==2167==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2167==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2167==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2167== 
==2167== 4,096 bytes in 1 blocks are still reachable in loss record 65 of 65
==2167==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2167==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2167==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2167==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2167==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2167==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2167==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2167==    by 0x100001AA1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2167==    by 0x100001494: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2167==    by 0x1000010AB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2167==    by 0x100000C00: main (leak5.cpp:21)
==2167== 
==2167== LEAK SUMMARY:
==2167==    definitely lost: 16 bytes in 1 blocks
==2167==    indirectly lost: 124 bytes in 2 blocks
==2167==      possibly lost: 2,064 bytes in 1 blocks
==2167==    still reachable: 4,096 bytes in 1 blocks
==2167==         suppressed: 20,134 bytes in 188 blocks
==2167== 
==2167== For counts of detected and suppressed errors, rerun with: -v
==2167== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak9
==2172== Memcheck, a memory error detector
==2172== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2172== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2172== Command: ./leak9
==2172== 
Leak 9 test: Type 9 - Testing  pointer to interior pointer memory allocation where the first pointer is reallocated
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 124 bytes in 2 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
==2172== Invalid read of size 8
==2172==    at 0x100000BFF: createLeak() (leak9.cpp:34)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172==  Address 0x100a82130 is 0 bytes inside a block of size 16 free'd
==2172==    at 0x10000BABD: free (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x100000BFA: createLeak() (leak9.cpp:33)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172==  Block was alloc'd at
==2172==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x100000BD8: createLeak() (leak9.cpp:32)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172== 
Runtime: 1490823ns
==2172== 
==2172== HEAP SUMMARY:
==2172==     in use at exit: 26,434 bytes in 193 blocks
==2172==   total heap usage: 260 allocs, 67 frees, 32,226 bytes allocated
==2172== 
==2172== 24 bytes in 1 blocks are indirectly lost in loss record 11 of 65
==2172==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x100000BB6: createLeak() (leak9.cpp:29)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172== 
==2172== 100 bytes in 1 blocks are indirectly lost in loss record 39 of 65
==2172==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x100000BA3: createLeak() (leak9.cpp:28)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172== 
==2172== 140 (16 direct, 124 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 65
==2172==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x100000B93: createLeak() (leak9.cpp:27)
==2172==    by 0x100000DF2: main (leak9.cpp:46)
==2172== 
==2172== 2,064 bytes in 1 blocks are possibly lost in loss record 61 of 65
==2172==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2172==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2172== 
==2172== 4,096 bytes in 1 blocks are still reachable in loss record 65 of 65
==2172==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2172==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2172==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2172==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2172==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2172==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2172==    by 0x100001AB1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2172==    by 0x1000014A4: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2172==    by 0x1000010BB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2172==    by 0x100000C50: main (leak9.cpp:38)
==2172== 
==2172== LEAK SUMMARY:
==2172==    definitely lost: 16 bytes in 1 blocks
==2172==    indirectly lost: 124 bytes in 2 blocks
==2172==      possibly lost: 2,064 bytes in 1 blocks
==2172==    still reachable: 4,096 bytes in 1 blocks
==2172==         suppressed: 20,134 bytes in 188 blocks
==2172== 
==2172== For counts of detected and suppressed errors, rerun with: -v
==2172== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak10
==2177== Memcheck, a memory error detector
==2177== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2177== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2177== Command: ./leak10
==2177== 
Leak 1 test, memory is allocated and not released before the program ends
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Winner score <= Loser score.  ERROR: 99
Runtime: 47726671ns
==2177== 
==2177== HEAP SUMMARY:
==2177==     in use at exit: 26,318 bytes in 192 blocks
==2177==   total heap usage: 259 allocs, 67 frees, 32,218 bytes allocated
==2177== 
==2177== 8 bytes in 1 blocks are definitely lost in loss record 2 of 64
==2177==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2177==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2177==    by 0x100000A83: createLeak() (leak10.cpp:17)
==2177==    by 0x100000EC2: main (leak10.cpp:43)
==2177== 
==2177== 16 bytes in 1 blocks are still reachable in loss record 5 of 64
==2177==    at 0x10000BD7F: calloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2177==    by 0x1000EE636: __cxa_get_globals (in /usr/lib/libc++abi.dylib)
==2177==    by 0x1000EEA19: __cxa_throw (in /usr/lib/libc++abi.dylib)
==2177==    by 0x100000ABE: createLeak() (leak10.cpp:20)
==2177==    by 0x100000EC2: main (leak10.cpp:43)
==2177== 
==2177== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==2177==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2177==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2177==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2177== 
==2177== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==2177==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2177==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2177==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2177==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2177==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2177==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2177==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2177==    by 0x100001A41: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2177==    by 0x100001434: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2177==    by 0x100000BEB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2177==    by 0x100000D20: main (leak10.cpp:34)
==2177== 
==2177== LEAK SUMMARY:
==2177==    definitely lost: 8 bytes in 1 blocks
==2177==    indirectly lost: 0 bytes in 0 blocks
==2177==      possibly lost: 2,064 bytes in 1 blocks
==2177==    still reachable: 4,112 bytes in 2 blocks
==2177==         suppressed: 20,134 bytes in 188 blocks
==2177== 
==2177== For counts of detected and suppressed errors, rerun with: -v
==2177== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak11_6
==2182== Memcheck, a memory error detector
==2182== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2182== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2182== Command: ./leak11_6
==2182== 
Leak 11 test, a static class variable is allocated to a block of memory and then reallocated before deallocation of the original block
Expected output:
definitely lost: 18  bytes in 2 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 40 bytes in 1 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 1005034ns
==2182== 
==2182== HEAP SUMMARY:
==2182==     in use at exit: 26,352 bytes in 192 blocks
==2182==   total heap usage: 258 allocs, 66 frees, 32,128 bytes allocated
==2182== 
==2182== 18 bytes in 1 blocks are definitely lost in loss record 4 of 64
==2182==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2182==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2182==    by 0x100000B88: Leak::createLeak(char*) (leak11_6.cpp:22)
==2182==    by 0x100000D99: main (leak11_6.cpp:42)
==2182== 
==2182== 40 bytes in 1 blocks are still reachable in loss record 23 of 64
==2182==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2182==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2182==    by 0x100000B88: Leak::createLeak(char*) (leak11_6.cpp:22)
==2182==    by 0x100000DA5: main (leak11_6.cpp:43)
==2182== 
==2182== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==2182==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2182==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2182==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2182== 
==2182== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==2182==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2182==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2182==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2182==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2182==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2182==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2182==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2182==    by 0x100001A61: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2182==    by 0x100001454: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2182==    by 0x10000106B: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2182==    by 0x100000BF0: main (leak11_6.cpp:32)
==2182== 
==2182== LEAK SUMMARY:
==2182==    definitely lost: 18 bytes in 1 blocks
==2182==    indirectly lost: 0 bytes in 0 blocks
==2182==      possibly lost: 2,064 bytes in 1 blocks
==2182==    still reachable: 4,136 bytes in 2 blocks
==2182==         suppressed: 20,134 bytes in 188 blocks
==2182== 
==2182== For counts of detected and suppressed errors, rerun with: -v
==2182== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak12_7
==2187== Memcheck, a memory error detector
==2187== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2187== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2187== Command: ./leak12_7
==2187== 
Leak 12 test, a static global variable is allocated to a block of memory and the reallocated before deallocation of the original block
Expected output:
definitely lost: 18  bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 40 bytes in 1 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 995616ns
==2187== 
==2187== HEAP SUMMARY:
==2187==     in use at exit: 26,352 bytes in 192 blocks
==2187==   total heap usage: 258 allocs, 66 frees, 32,128 bytes allocated
==2187== 
==2187== 18 bytes in 1 blocks are definitely lost in loss record 4 of 64
==2187==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2187==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2187==    by 0x100000B88: createLeak(char*) (leak12_7.cpp:18)
==2187==    by 0x100000D99: main (leak12_7.cpp:35)
==2187== 
==2187== 40 bytes in 1 blocks are still reachable in loss record 23 of 64
==2187==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2187==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2187==    by 0x100000B88: createLeak(char*) (leak12_7.cpp:18)
==2187==    by 0x100000DA5: main (leak12_7.cpp:36)
==2187== 
==2187== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==2187==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2187==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2187==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2187== 
==2187== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==2187==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2187==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2187==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2187==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2187==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2187==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2187==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2187==    by 0x100001A61: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2187==    by 0x100001454: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2187==    by 0x10000106B: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2187==    by 0x100000BF0: main (leak12_7.cpp:26)
==2187== 
==2187== LEAK SUMMARY:
==2187==    definitely lost: 18 bytes in 1 blocks
==2187==    indirectly lost: 0 bytes in 0 blocks
==2187==      possibly lost: 2,064 bytes in 1 blocks
==2187==    still reachable: 4,136 bytes in 2 blocks
==2187==         suppressed: 20,134 bytes in 188 blocks
==2187== 
==2187== For counts of detected and suppressed errors, rerun with: -v
==2187== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak13_8
==2192== Memcheck, a memory error detector
==2192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2192== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2192== Command: ./leak13_8
==2192== 
Leak 13 test, a static local variable is allocated to a block of memory and the reallocated before deallocation of the original block
Expected output:
definitely lost: 100  bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 100 bytes in 1 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 647953ns
==2192== 
==2192== HEAP SUMMARY:
==2192==     in use at exit: 26,494 bytes in 192 blocks
==2192==   total heap usage: 258 allocs, 66 frees, 32,270 bytes allocated
==2192== 
==2192== 100 bytes in 1 blocks are still reachable in loss record 38 of 64
==2192==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2192==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2192==    by 0x100000BFF: createLeak() (leak13_8.cpp:15)
==2192==    by 0x100000DE7: main (leak13_8.cpp:29)
==2192== 
==2192== 100 bytes in 1 blocks are definitely lost in loss record 39 of 64
==2192==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2192==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2192==    by 0x100000BFF: createLeak() (leak13_8.cpp:15)
==2192==    by 0x100000DE2: main (leak13_8.cpp:28)
==2192== 
==2192== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==2192==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2192==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2192==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2192== 
==2192== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==2192==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2192==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2192==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2192==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2192==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2192==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2192==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2192==    by 0x100001AB1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2192==    by 0x1000014A4: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2192==    by 0x1000010BB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2192==    by 0x100000C40: main (leak13_8.cpp:19)
==2192== 
==2192== LEAK SUMMARY:
==2192==    definitely lost: 100 bytes in 1 blocks
==2192==    indirectly lost: 0 bytes in 0 blocks
==2192==      possibly lost: 2,064 bytes in 1 blocks
==2192==    still reachable: 4,196 bytes in 2 blocks
==2192==         suppressed: 20,134 bytes in 188 blocks
==2192== 
==2192== For counts of detected and suppressed errors, rerun with: -v
==2192== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all --leak-check-heuristics=all ./leak14_9
==2197== Memcheck, a memory error detector
==2197== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2197== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==2197== Command: ./leak14_9
==2197== 
Leak 14 test, a base class pointer is assigned to a derived class, the base class destructor is then called instead of the derived class destructor
Expected output:
definitely lost: 100  bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 100 bytes in 1 blocks
     suppressed: 0 bytes in 0 blocks
allocating 1 steamtrain
allocating 1 electricTrain
Train destructor called
Train destructor called
Runtime: 3525513ns
==2197== 
==2197== HEAP SUMMARY:
==2197==     in use at exit: 26,318 bytes in 193 blocks
==2197==   total heap usage: 260 allocs, 67 frees, 32,086 bytes allocated
==2197== 
==2197== 4 bytes in 1 blocks are definitely lost in loss record 1 of 64
==2197==    at 0x10000C681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2197==    by 0x1000517DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2197==    by 0x1000008B6: steamTrain::steamTrain() (leak14_9.cpp:41)
==2197==    by 0x100000904: steamTrain::steamTrain() (leak14_9.cpp:39)
==2197==    by 0x100000CFA: main (leak14_9.cpp:90)
==2197== 
==2197== 4 bytes in 1 blocks are definitely lost in loss record 2 of 64
==2197==    at 0x10000C681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2197==    by 0x1000517DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==2197==    by 0x1000009E6: electricTrain::electricTrain() (leak14_9.cpp:63)
==2197==    by 0x100000A34: electricTrain::electricTrain() (leak14_9.cpp:61)
==2197==    by 0x100000D35: main (leak14_9.cpp:91)
==2197== 
==2197== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==2197==    at 0x10000C942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2197==    by 0x1005E7EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB182: protocols() (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005D8C13: gc_init (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005E024E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005ED132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2197==    by 0x1005DB2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==2197== 
==2197== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==2197==    at 0x10000C681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==2197==    by 0x1002D0AEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==2197==    by 0x1002E5B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==2197==    by 0x1002CFD4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==2197==    by 0x1002D0342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==2197==    by 0x10002A38B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==2197==    by 0x1000201CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==2197==    by 0x100001971: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==2197==    by 0x100001364: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==2197==    by 0x10000071B: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==2197==    by 0x100000B4A: main (leak14_9.cpp:81)
==2197== 
==2197== LEAK SUMMARY:
==2197==    definitely lost: 8 bytes in 2 blocks
==2197==    indirectly lost: 0 bytes in 0 blocks
==2197==      possibly lost: 2,064 bytes in 1 blocks
==2197==    still reachable: 4,096 bytes in 1 blocks
==2197==         suppressed: 20,150 bytes in 189 blocks
==2197== 
==2197== For counts of detected and suppressed errors, rerun with: -v
==2197== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 14 from 14)