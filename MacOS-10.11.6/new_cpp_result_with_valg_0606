valgrind --leak-check=full --show-leak-kinds=all ./leak1
==16371== Memcheck, a memory error detector
==16371== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16371== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16371== Command: ./leak1
==16371== 
Leak 1 test, memory is allocated and not released before the program ends
Expected output:
definitely lost: 100 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 1219583ns
==16371== 
==16371== HEAP SUMMARY:
==16371==     in use at exit: 26,394 bytes in 191 blocks
==16371==   total heap usage: 257 allocs, 66 frees, 32,170 bytes allocated
==16371== 
==16371== 100 bytes in 1 blocks are definitely lost in loss record 38 of 63
==16371==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16371==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16371==    by 0x100000C53: createLeak() (leak1.cpp:14)
==16371==    by 0x100000E32: main (leak1.cpp:28)
==16371== 
==16371== 2,064 bytes in 1 blocks are possibly lost in loss record 59 of 63
==16371==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16371==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16371==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16371== 
==16371== 4,096 bytes in 1 blocks are still reachable in loss record 63 of 63
==16371==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16371==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==16371==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==16371==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==16371==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==16371==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==16371==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==16371==    by 0x100001AF1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==16371==    by 0x1000014E4: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==16371==    by 0x1000010FB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==16371==    by 0x100000C90: main (leak1.cpp:19)
==16371== 
==16371== LEAK SUMMARY:
==16371==    definitely lost: 100 bytes in 1 blocks
==16371==    indirectly lost: 0 bytes in 0 blocks
==16371==      possibly lost: 2,064 bytes in 1 blocks
==16371==    still reachable: 4,096 bytes in 1 blocks
==16371==         suppressed: 20,134 bytes in 188 blocks
==16371== 
==16371== For counts of detected and suppressed errors, rerun with: -v
==16371== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all ./leak2
==16392== Memcheck, a memory error detector
==16392== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16392== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16392== Command: ./leak2
==16392== 
Leak 2 test: A pointer is assigned to one memory location and is then redirected without releasing the memory block. The second memory block is deleted
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 2175510ns
==16392== 
==16392== HEAP SUMMARY:
==16392==     in use at exit: 26,302 bytes in 191 blocks
==16392==   total heap usage: 258 allocs, 67 frees, 32,094 bytes allocated
==16392== 
==16392== 8 bytes in 1 blocks are definitely lost in loss record 2 of 63
==16392==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16392==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16392==    by 0x100000AD4: MemLeak::createMemLeak(char*) (leak2.cpp:45)
==16392==    by 0x100000CE2: main (leak2.cpp:65)
==16392== 
==16392== 2,064 bytes in 1 blocks are possibly lost in loss record 59 of 63
==16392==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16392==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16392==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16392== 
==16392== 4,096 bytes in 1 blocks are still reachable in loss record 63 of 63
==16392==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16392==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==16392==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==16392==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==16392==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==16392==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==16392==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==16392==    by 0x100001A41: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==16392==    by 0x100001434: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==16392==    by 0x10000104B: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==16392==    by 0x100000B31: main (leak2.cpp:55)
==16392== 
==16392== LEAK SUMMARY:
==16392==    definitely lost: 8 bytes in 1 blocks
==16392==    indirectly lost: 0 bytes in 0 blocks
==16392==      possibly lost: 2,064 bytes in 1 blocks
==16392==    still reachable: 4,096 bytes in 1 blocks
==16392==         suppressed: 20,134 bytes in 188 blocks
==16392== 
==16392== For counts of detected and suppressed errors, rerun with: -v
==16392== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all ./leak5
==16421== Memcheck, a memory error detector
==16421== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16421== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16421== Command: ./leak5
==16421== 
Leak 5 test: Testing pointer to pointer memory allocation
Char pointers require 4 bytes for BBB architecture therefore 8 bytes are definitely lost
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 124 bytes in 2 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Runtime: 1801849ns
==16421== 
==16421== HEAP SUMMARY:
==16421==     in use at exit: 26,434 bytes in 193 blocks
==16421==   total heap usage: 259 allocs, 66 frees, 32,210 bytes allocated
==16421== 
==16421== 24 bytes in 1 blocks are indirectly lost in loss record 11 of 65
==16421==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16421==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16421==    by 0x100000BB6: createLeak() (leak5.cpp:14)
==16421==    by 0x100000DDE: main (leak5.cpp:30)
==16421== 
==16421== 100 bytes in 1 blocks are indirectly lost in loss record 39 of 65
==16421==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16421==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16421==    by 0x100000BA3: createLeak() (leak5.cpp:13)
==16421==    by 0x100000DDE: main (leak5.cpp:30)
==16421== 
==16421== 140 (16 direct, 124 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 65
==16421==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16421==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16421==    by 0x100000B93: createLeak() (leak5.cpp:12)
==16421==    by 0x100000DDE: main (leak5.cpp:30)
==16421== 
==16421== 2,064 bytes in 1 blocks are possibly lost in loss record 61 of 65
==16421==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16421==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16421==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16421== 
==16421== 4,096 bytes in 1 blocks are still reachable in loss record 65 of 65
==16421==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16421==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==16421==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==16421==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==16421==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==16421==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==16421==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==16421==    by 0x100001AA1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==16421==    by 0x100001494: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==16421==    by 0x1000010AB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==16421==    by 0x100000C00: main (leak5.cpp:21)
==16421== 
==16421== LEAK SUMMARY:
==16421==    definitely lost: 16 bytes in 1 blocks
==16421==    indirectly lost: 124 bytes in 2 blocks
==16421==      possibly lost: 2,064 bytes in 1 blocks
==16421==    still reachable: 4,096 bytes in 1 blocks
==16421==         suppressed: 20,134 bytes in 188 blocks
==16421== 
==16421== For counts of detected and suppressed errors, rerun with: -v
==16421== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all ./leak9
==16450== Memcheck, a memory error detector
==16450== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16450== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16450== Command: ./leak9
==16450== 
Leak 9 test: Type 9 - Testing  pointer to interior pointer memory allocation where the first pointer is reallocated
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 124 bytes in 2 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
==16450== Invalid read of size 8
==16450==    at 0x100000BFF: createLeak() (leak9.cpp:34)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450==  Address 0x100a82130 is 0 bytes inside a block of size 16 free'd
==16450==    at 0x10000BABD: free (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x100000BFA: createLeak() (leak9.cpp:33)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450==  Block was alloc'd at
==16450==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x100000BD8: createLeak() (leak9.cpp:32)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450== 
Runtime: 2590134ns
==16450== 
==16450== HEAP SUMMARY:
==16450==     in use at exit: 26,434 bytes in 193 blocks
==16450==   total heap usage: 260 allocs, 67 frees, 32,226 bytes allocated
==16450== 
==16450== 24 bytes in 1 blocks are indirectly lost in loss record 11 of 65
==16450==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x100000BB6: createLeak() (leak9.cpp:29)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450== 
==16450== 100 bytes in 1 blocks are indirectly lost in loss record 39 of 65
==16450==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x100000BA3: createLeak() (leak9.cpp:28)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450== 
==16450== 140 (16 direct, 124 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 65
==16450==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x100000B93: createLeak() (leak9.cpp:27)
==16450==    by 0x100000DF2: main (leak9.cpp:46)
==16450== 
==16450== 2,064 bytes in 1 blocks are possibly lost in loss record 61 of 65
==16450==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16450==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16450== 
==16450== 4,096 bytes in 1 blocks are still reachable in loss record 65 of 65
==16450==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16450==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==16450==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==16450==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==16450==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==16450==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==16450==    by 0x100001AB1: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==16450==    by 0x1000014A4: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==16450==    by 0x1000010BB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==16450==    by 0x100000C50: main (leak9.cpp:38)
==16450== 
==16450== LEAK SUMMARY:
==16450==    definitely lost: 16 bytes in 1 blocks
==16450==    indirectly lost: 124 bytes in 2 blocks
==16450==      possibly lost: 2,064 bytes in 1 blocks
==16450==    still reachable: 4,096 bytes in 1 blocks
==16450==         suppressed: 20,134 bytes in 188 blocks
==16450== 
==16450== For counts of detected and suppressed errors, rerun with: -v
==16450== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 14 from 14)
valgrind --leak-check=full --show-leak-kinds=all ./leak10
==16455== Memcheck, a memory error detector
==16455== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16455== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16455== Command: ./leak10
==16455== 
Leak 1 test, memory is allocated and not released before the program ends
Expected output:
definitely lost: 8 bytes in 1 blocks
indirectly lost: 0 bytes in 0 blocks
  possibly lost: 0 bytes in 0 blocks
still reachable: 0 bytes in 0 blocks
     suppressed: 0 bytes in 0 blocks
Winner score <= Loser score.  ERROR: 99
Runtime: 142528550ns
==16455== 
==16455== HEAP SUMMARY:
==16455==     in use at exit: 26,318 bytes in 192 blocks
==16455==   total heap usage: 259 allocs, 67 frees, 32,218 bytes allocated
==16455== 
==16455== 8 bytes in 1 blocks are definitely lost in loss record 2 of 64
==16455==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16455==    by 0x1000507DD: operator new(unsigned long) (in /usr/lib/libc++.1.dylib)
==16455==    by 0x100000A83: createLeak() (leak10.cpp:17)
==16455==    by 0x100000EC2: main (leak10.cpp:43)
==16455== 
==16455== 16 bytes in 1 blocks are still reachable in loss record 5 of 64
==16455==    at 0x10000BD7F: calloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16455==    by 0x1000EE636: __cxa_get_globals (in /usr/lib/libc++abi.dylib)
==16455==    by 0x1000EEA19: __cxa_throw (in /usr/lib/libc++abi.dylib)
==16455==    by 0x100000ABE: createLeak() (leak10.cpp:20)
==16455==    by 0x100000EC2: main (leak10.cpp:43)
==16455== 
==16455== 2,064 bytes in 1 blocks are possibly lost in loss record 60 of 64
==16455==    at 0x10000B942: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16455==    by 0x1005E6EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA182: protocols() (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005D7C13: gc_init (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DF24E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005EC132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16455==    by 0x1005DA2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==16455== 
==16455== 4,096 bytes in 1 blocks are still reachable in loss record 64 of 64
==16455==    at 0x10000B681: malloc (in /usr/local/Cellar/valgrind/3.12.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16455==    by 0x1002CFAEE: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==16455==    by 0x1002E4B41: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==16455==    by 0x1002CED4A: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==16455==    by 0x1002CF342: fwrite (in /usr/lib/system/libsystem_c.dylib)
==16455==    by 0x10002938B: std::__1::__stdoutbuf<char>::overflow(int) (in /usr/lib/libc++.1.dylib)
==16455==    by 0x10001F1CC: std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/libc++.1.dylib)
==16455==    by 0x100001A41: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) (streambuf:360)
==16455==    by 0x100001434: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) (ostream:755)
==16455==    by 0x100000BEB: std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) (ostream:894)
==16455==    by 0x100000D20: main (leak10.cpp:34)
==16455== 
==16455== LEAK SUMMARY:
==16455==    definitely lost: 8 bytes in 1 blocks
==16455==    indirectly lost: 0 bytes in 0 blocks
==16455==      possibly lost: 2,064 bytes in 1 blocks
==16455==    still reachable: 4,112 bytes in 2 blocks
==16455==         suppressed: 20,134 bytes in 188 blocks
==16455== 
==16455== For counts of detected and suppressed errors, rerun with: -v
==16455== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 14 from 14)
Zhengshuangs-MacBook-Pro:Cpp_MemLeak_Tests Ryan$ 